{"version":3,"sources":["pages/MoviesPageSearch/MoviesPageSearch.js","services/apiService.js","components/FilmList/FilmList.module.css","components/PageHeading/PageHeading.js","components/PageHeading/PageHeading.module.css","components/FilmListItem/FilmListItem.js","components/FilmList/FilmList.js","pages/MoviesPageSearch/MoviesPageSearch.module.css"],"names":["MoviesPageSearch","history","useHistory","useState","input","setInput","films","setFilms","useEffect","location","state","search","getFilmsByQuery","then","resp","data","results","text","className","s","form","onSubmit","e","preventDefault","trim","toast","info","name","value","type","autoComplete","autoFocus","placeholder","onChange","target","btn","query","getTrendingFilms","a","axios","method","url","getFilmById","id","getCastInfo","get","getReviewsInfo","defaults","baseURL","module","exports","PageHeading","styles","title","FilmListItem","film","useLocation","itemFilm","to","pathname","undefined","from","poster","src","poster_path","alt","filmTitle","FilmList","filmsList","map"],"mappings":"mOAuEeA,UA/Df,WACE,IAAMC,EAAUC,cAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAsCA,OAXAC,qBAAU,WAAO,IAAD,EAEsB,GAApC,UAAIP,EAAQQ,SAASC,aAArB,aAAI,EAAwBC,SAC1BC,YAAe,UAACX,EAAQQ,SAASC,aAAlB,aAAC,EAAwBC,QAAQE,MAAK,SAACC,GAAU,IAAD,EAE7DP,EAASO,EAAKC,KAAKC,SACnBX,EAAQ,UAACJ,EAAQQ,SAASC,aAAlB,aAAC,EAAwBC,aAGpC,CAACV,IAGF,qCACE,cAAC,IAAD,CAAagB,KAAK,WAClB,uBAAMC,UAAWC,IAAEC,KAAMC,SAnCR,SAACC,GAGpB,GAFAA,EAAEC,iBAEmB,KAAjBnB,EAAMoB,OAER,OADAnB,EAAS,IACFoB,IAAMC,KAAK,wDAOlBd,YAAgBR,GAAOS,MAAK,SAACC,GAAD,OAAUP,EAASO,EAAKC,KAAKC,aAuBzD,UACE,uBACEE,UAAWC,IAAEf,MACbuB,KAAK,QACLC,MAAOxB,EACPyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,SAhDkB,SAACX,GACzBjB,EAASiB,EAAEY,OAAON,UAiDd,wBAAQC,KAAK,SAASX,UAAWC,IAAEgB,SAGrC,cAAC,IAAD,CAAUC,MAAOhC,EAAOE,MAAOA,S,iQC9DtB+B,I,2EAAf,4BAAAC,EAAA,sEACqBC,IAAM,CACvBC,OAAQ,MACRC,IAAK,kEAHT,cACQ3B,EADR,yBAKSA,GALT,4C,sBAQA,SAAS4B,EAAYC,GACnB,OAAOJ,IAAM,CACXC,OAAQ,MACRC,IAAI,UAAD,OAAYE,EAAZ,+CAIP,SAAS/B,EAAgBwB,GACvB,OAAOG,IAAM,CACXC,OAAQ,MACRC,IACE,gEAAkEL,IAIxE,SAASQ,EAAYD,GACnB,OAAOJ,IAAMM,IAAN,iBACKF,EADL,sDAKT,SAASG,EAAeH,GACtB,OAAOJ,IAAMM,IAAN,iBACKF,EADL,sDAhCTJ,IAAMQ,SAASC,QAAU,gC,mBCDzBC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,SAAW,2BAA2B,UAAY,4BAA4B,OAAS,2B,gCCDjJ,4BAKeC,IAHf,YAAgC,IAATlC,EAAQ,EAARA,KACrB,OAAO,oBAAIC,UAAWkC,IAAOC,MAAtB,SAA8BpC,M,mBCFvCgC,EAAOC,QAAU,CAAC,MAAQ,6B,2EC2CXI,EAzCM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMnB,EAAY,EAAZA,MACtB3B,EAAW+C,cAOjB,OACE,qBAAItC,UAAWC,IAAEsC,SAAjB,UACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaJ,EAAKZ,IAG1BjC,MAAO,CACLC,YAAkBiD,IAAVxB,EAAsBA,EAAQ,GACtCO,GAAIY,EAAKZ,GACTkB,KAAMpD,EAASkD,WARrB,SAYE,qBACEzC,UAAWC,IAAE2C,OACbC,IACwB,QAAlB,OAAJR,QAAI,IAAJA,OAAA,EAAAA,EAAMS,mBAA8CJ,KAAlB,OAAJL,QAAI,IAAJA,OAAA,EAAAA,EAAMS,aArB/B,mCAsBQT,EAAKS,YApB1B,0DA0BMC,IAAKV,EAAKF,UAId,sBAAMnC,UAAWC,IAAE+C,UAAnB,SAA+BX,EAAKF,YCxB3Bc,IAZE,SAAC,GAAsB,IAApB7D,EAAmB,EAAnBA,MAAO8B,EAAY,EAAZA,MACzB,OACE,mCACE,oBAAIlB,UAAWC,IAAEiD,UAAjB,SACG9D,EAAM+D,KAAI,SAACd,GAAD,OACT,cAAC,EAAD,CAAcnB,MAAOA,EAAqBmB,KAAMA,GAAfA,EAAKZ,a,mBCPhDM,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,IAAM","file":"static/js/5.7c3dd091.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFilmsByQuery } from \"../../services/apiService\";\r\nimport FilmList from \"../../components/FilmList/FilmList\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./MoviesPageSearch.module.css\";\r\nimport PageHeading from \"../../components/PageHeading/PageHeading\";\r\n\r\nfunction MoviesPageSearch() {\r\n  const history = useHistory();\r\n  const [input, setInput] = useState(\"\");\r\n  const [films, setFilms] = useState([]);\r\n\r\n  const handleChangeQuery = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (input.trim() === \"\") {\r\n      setInput(\"\");\r\n      return toast.info(\"😱 Please enter a value for search movies!\");\r\n    } else {\r\n      // history.push({\r\n      //   pathname: history.location.pathname,\r\n      //   search: `?q=${input}`,\r\n      // });\r\n      // history.push(`?q=${input}`);\r\n      getFilmsByQuery(input).then((resp) => setFilms(resp.data.results));\r\n\r\n      //   if (resp.data.results.length < 1) {\r\n      //     setInput(\"\");\r\n      //     return toast.error(`Your search - ${input} - did not match any images`);\r\n      //   }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //оператор опц-ной последовательности.если у state{} есть search он его возьмет. если нет- nul и в if не зайдет\r\n    if (history.location.state?.search) {\r\n      getFilmsByQuery(history.location.state?.search).then((resp) => {\r\n        // console.log(resp);\r\n        setFilms(resp.data.results);\r\n        setInput(history.location.state?.search);\r\n      });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Movies\" />\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <input\r\n          className={s.input}\r\n          name=\"query\"\r\n          value={input} //value нашего input зависит от стейта.конторолируемый input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies...\"\r\n          onChange={handleChangeQuery}\r\n        />\r\n        <button type=\"submit\" className={s.btn}></button>\r\n      </form>\r\n\r\n      <FilmList query={input} films={films} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesPageSearch;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nasync function getTrendingFilms() {\r\n  const resp = await axios({\r\n    method: \"GET\",\r\n    url: \"/trending/movie/week?api_key=8d4e0a5a0c37d4780eefdf617d0feea1\",\r\n  });\r\n  return resp;\r\n}\r\n\r\nfunction getFilmById(id) {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/movie/${id}?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`,\r\n  });\r\n}\r\n\r\nfunction getFilmsByQuery(query) {\r\n  return axios({\r\n    method: \"GET\",\r\n    url:\r\n      \"/search/movie?api_key=8d4e0a5a0c37d4780eefdf617d0feea1&query=\" + query,\r\n  });\r\n}\r\n\r\nfunction getCastInfo(id) {\r\n  return axios.get(\r\n    `/movie/${id}/credits?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`\r\n  );\r\n}\r\n\r\nfunction getReviewsInfo(id) {\r\n  return axios.get(\r\n    `/movie/${id}/reviews?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`\r\n  );\r\n}\r\n\r\nexport {\r\n  getTrendingFilms,\r\n  getFilmById,\r\n  getFilmsByQuery,\r\n  getCastInfo,\r\n  getReviewsInfo,\r\n};\r\n\r\n// const BASE_URL = \"https://api.themoviedb.org/3\";\r\n// const API_KEY = \"6914e86918040074e2fe382ba8e8cb5e\";\r\n\r\n// async function apiService(url = \"\", config = {}) {\r\n//   const response = await fetch(url, config);\r\n//   return response.ok\r\n//     ? await response.json()\r\n//     : Promise.reject(\r\n//         new Error(\"404 The resource you requested could not be found 🥺\")\r\n//       );\r\n// }\r\n\r\n// export function getTrending() {\r\n//   return apiService(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n// }\r\n\r\n// export function searchMovies(query) {\r\n//   return apiService(\r\n//     `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\r\n//   );\r\n// }\r\n\r\n// export function getMovieDetails(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n//   );\r\n// }\r\n\r\n// export function getMovieCredits(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n//   );\r\n// }\r\n\r\n// export function getMovieReviews(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n//   );\r\n// }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmList_filmsList__3-sSY\",\"itemFilm\":\"FilmList_itemFilm__1KYpT\",\"filmTitle\":\"FilmList_filmTitle__2P-IF\",\"poster\":\"FilmList_poster__1-foF\"};","import styles from \"./PageHeading.module.css\";\r\n\r\nfunction PageHeading({ text }) {\r\n  return <h1 className={styles.title}>{text}</h1>;\r\n}\r\nexport default PageHeading;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__2j0-H\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport s from \"../FilmList/FilmList.module.css\";\r\n\r\nconst FilmListItem = ({ film, query }) => {\r\n  const location = useLocation();\r\n  // const { path } = useRouteMatch();\r\n  // console.log(path);\r\n  const imgUrl = \"https://image.tmdb.org/t/p/w500/\";\r\n  const defaultPoster =\r\n    \"https://media.comicbook.com/files/img/default-movie.png\";\r\n\r\n  return (\r\n    <li className={s.itemFilm}>\r\n      <Link\r\n        to={{\r\n          pathname: `/movies/${film.id}`, //наш раут фильма\r\n          //записываем в state. если приходит prop search - записываем query, который в пропсах принимаем\r\n          //когда переходим из стр поиска фильмов prop search приходит. когда из home - нет\r\n          state: {\r\n            search: query !== undefined ? query : \"\",\r\n            id: film.id,\r\n            from: location.pathname, //откуда, с какой страницы перешли\r\n          },\r\n        }}\r\n      >\r\n        <img\r\n          className={s.poster}\r\n          src={\r\n            film?.poster_path !== null && film?.poster_path !== undefined\r\n              ? imgUrl + film.poster_path\r\n              : defaultPoster\r\n            // film.poster_path\r\n            //   ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\r\n            //   : \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n          }\r\n          alt={film.title}\r\n        ></img>\r\n        {/* {film.title} */}\r\n      </Link>\r\n      <span className={s.filmTitle}>{film.title}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FilmListItem;\r\n","import FilmListItem from \"../FilmListItem/FilmListItem\";\r\nimport s from \"../FilmList/FilmList.module.css\";\r\n\r\nconst FilmList = ({ films, query }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.filmsList}>\r\n        {films.map((film) => (\r\n          <FilmListItem query={query} key={film.id} film={film} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPageSearch_form__yxvbC\",\"input\":\"MoviesPageSearch_input__2-LN_\",\"btn\":\"MoviesPageSearch_btn__1HRXw\"};"],"sourceRoot":""}