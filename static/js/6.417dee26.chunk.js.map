{"version":3,"sources":["pages/HomePage/HomePage.js","services/apiService.js","components/FilmList/FilmList.module.css","components/PageHeading/PageHeading.js","components/PageHeading/PageHeading.module.css","components/FilmListItem/FilmListItem.js","components/FilmList/FilmList.js"],"names":["HomePage","useState","films","setFilms","useEffect","a","getTrendingFilms","results","data","fn","text","axios","method","url","resp","getFilmById","id","getFilmsByQuery","query","getCastInfo","get","getReviewsInfo","defaults","baseURL","module","exports","PageHeading","className","styles","title","FilmListItem","film","location","useLocation","s","itemFilm","to","pathname","state","search","undefined","from","poster","src","poster_path","alt","filmTitle","FilmList","filmsList","map"],"mappings":"4NAoEeA,UA1DE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,YACA,uCAAG,8BAAAC,EAAA,sEAGCC,cAHD,gBAECC,EAFD,EAEPC,KAAQD,QAEVJ,EAASI,GAJA,2CAAH,qDAMRE,KACC,IAGD,qCACE,cAAC,IAAD,CAAaC,KAAK,mBACjBR,GAAS,cAAC,IAAD,CAAUA,MAAOA,S,iQCxBlBI,I,2EAAf,4BAAAD,EAAA,sEACqBM,IAAM,CACvBC,OAAQ,MACRC,IAAK,kEAHT,cACQC,EADR,yBAKSA,GALT,4C,sBAQA,SAASC,EAAYC,GACnB,OAAOL,IAAM,CACXC,OAAQ,MACRC,IAAI,UAAD,OAAYG,EAAZ,+CAIP,SAASC,EAAgBC,GACvB,OAAOP,IAAM,CACXC,OAAQ,MACRC,IACE,gEAAkEK,IAIxE,SAASC,EAAYH,GACnB,OAAOL,IAAMS,IAAN,iBACKJ,EADL,sDAKT,SAASK,EAAeL,GACtB,OAAOL,IAAMS,IAAN,iBACKJ,EADL,sDAhCTL,IAAMW,SAASC,QAAU,gC,mBCDzBC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,SAAW,2BAA2B,UAAY,4BAA4B,OAAS,2B,gCCDjJ,4BAKeC,IAHf,YAAgC,IAAThB,EAAQ,EAARA,KACrB,OAAO,oBAAIiB,UAAWC,IAAOC,MAAtB,SAA8BnB,M,mBCFvCc,EAAOC,QAAU,CAAC,MAAQ,6B,2EC2CXK,EAzCM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMb,EAAY,EAAZA,MACtBc,EAAWC,cAOjB,OACE,qBAAIN,UAAWO,IAAEC,SAAjB,UACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaN,EAAKf,IAG1BsB,MAAO,CACLC,YAAkBC,IAAVtB,EAAsBA,EAAQ,GACtCF,GAAIe,EAAKf,GACTyB,KAAMT,EAASK,WARrB,SAYE,qBACEV,UAAWO,IAAEQ,OACbC,IACwB,QAAlB,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMa,mBAA8CJ,KAAlB,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAMa,aArB/B,mCAsBQb,EAAKa,YApB1B,0DA0BMC,IAAKd,EAAKF,UAId,sBAAMF,UAAWO,IAAEY,UAAnB,SAA+Bf,EAAKF,YCxB3BkB,IAZE,SAAC,GAAsB,IAApB7C,EAAmB,EAAnBA,MAAOgB,EAAY,EAAZA,MACzB,OACE,mCACE,oBAAIS,UAAWO,IAAEc,UAAjB,SACG9C,EAAM+C,KAAI,SAAClB,GAAD,OACT,cAAC,EAAD,CAAcb,MAAOA,EAAqBa,KAAMA,GAAfA,EAAKf","file":"static/js/6.417dee26.chunk.js","sourcesContent":["// –¥–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∏–Ω–æ—Ñ–∏–ª—å–º–æ–≤.\r\nimport { useEffect, useState } from \"react\";\r\nimport { getTrendingFilms } from \"../../services/apiService\";\r\nimport FilmList from \"../../components/FilmList/FilmList\";\r\nimport PageHeading from \"../../components/PageHeading/PageHeading\";\r\n// import { Link, useLocation } from \"react-router-dom\";\r\n\r\n// const imgUrl = \"https://image.tmdb.org/t/p/w500/\";\r\n// const defaultPoster = \"https://media.comicbook.com/files/img/default-movie.png\";\r\n\r\nconst HomePage = () => {\r\n  const [films, setFilms] = useState([]);\r\n  // const location = useLocation();\r\n  // const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fn = async () => {\r\n      const {\r\n        data: { results },\r\n      } = await getTrendingFilms();\r\n      setFilms(results);\r\n    };\r\n    fn();\r\n  }, []);\r\n  //\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Trending Today\" />\r\n      {films && <FilmList films={films} />}\r\n\r\n      {/* {films && (\r\n        <ul>\r\n          {films.map((film) => (\r\n            <li key={film.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${film.id}`, //–Ω–∞—à —Ä–∞—É—Ç —Ñ–∏–ª—å–º–∞\r\n                  //–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ state. –µ—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç prop search - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º query, –∫–æ—Ç–æ—Ä—ã–π –≤ –ø—Ä–æ–ø—Å–∞—Ö –ø—Ä–∏–Ω–∏–º–∞–µ–º\r\n                  //–∫–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∏–∑ —Å—Ç—Ä –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ prop search –ø—Ä–∏—Ö–æ–¥–∏—Ç. –∫–æ–≥–¥–∞ –∏–∑ home - –Ω–µ—Ç\r\n                  state: {\r\n                    // search: query !== undefined ? query : \"\",\r\n                    id: film.id,\r\n                    from: location.pathname, //–æ—Ç–∫—É–¥–∞, —Å –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä–µ—à–ª–∏\r\n                  },\r\n                }}\r\n              >\r\n                <img\r\n                  src={\r\n                    film?.poster_path !== null &&\r\n                    film?.poster_path !== undefined\r\n                      ? imgUrl + film.poster_path\r\n                      : defaultPoster\r\n                    // film.poster_path\r\n                    //   ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\r\n                    //   : \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n                  }\r\n                  alt={film.title}\r\n                ></img>\r\n                {film.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n//\r\n//useRouteMatc –≤–æ–∑–≤—Ä–∞—â. –æ–±—ä–µ–∫—Ç, –∫–∞–∫ —Ç–µ–∫—É—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–≤–ø–∞–ª —Å –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ\r\n//*–¥–ª—è —Å–æ—Å—Ç–∞–≤. –≤–ª–æ–∂–µ–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ url.—ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å\r\n//–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ url-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –≤–ª–æ–∂–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è.\r\n//  c match –±–µ—Ä–µ–º  url —Å–≤–æ–π—Å—Ç–≤–æ\r\n//   const { url } = useRouteMatch();\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nasync function getTrendingFilms() {\r\n  const resp = await axios({\r\n    method: \"GET\",\r\n    url: \"/trending/movie/week?api_key=8d4e0a5a0c37d4780eefdf617d0feea1\",\r\n  });\r\n  return resp;\r\n}\r\n\r\nfunction getFilmById(id) {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: `/movie/${id}?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`,\r\n  });\r\n}\r\n\r\nfunction getFilmsByQuery(query) {\r\n  return axios({\r\n    method: \"GET\",\r\n    url:\r\n      \"/search/movie?api_key=8d4e0a5a0c37d4780eefdf617d0feea1&query=\" + query,\r\n  });\r\n}\r\n\r\nfunction getCastInfo(id) {\r\n  return axios.get(\r\n    `/movie/${id}/credits?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`\r\n  );\r\n}\r\n\r\nfunction getReviewsInfo(id) {\r\n  return axios.get(\r\n    `/movie/${id}/reviews?api_key=8d4e0a5a0c37d4780eefdf617d0feea1`\r\n  );\r\n}\r\n\r\nexport {\r\n  getTrendingFilms,\r\n  getFilmById,\r\n  getFilmsByQuery,\r\n  getCastInfo,\r\n  getReviewsInfo,\r\n};\r\n\r\n// const BASE_URL = \"https://api.themoviedb.org/3\";\r\n// const API_KEY = \"6914e86918040074e2fe382ba8e8cb5e\";\r\n\r\n// async function apiService(url = \"\", config = {}) {\r\n//   const response = await fetch(url, config);\r\n//   return response.ok\r\n//     ? await response.json()\r\n//     : Promise.reject(\r\n//         new Error(\"404 The resource you requested could not be found ü•∫\")\r\n//       );\r\n// }\r\n\r\n// export function getTrending() {\r\n//   return apiService(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n// }\r\n\r\n// export function searchMovies(query) {\r\n//   return apiService(\r\n//     `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\r\n//   );\r\n// }\r\n\r\n// export function getMovieDetails(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n//   );\r\n// }\r\n\r\n// export function getMovieCredits(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n//   );\r\n// }\r\n\r\n// export function getMovieReviews(movieId) {\r\n//   return apiService(\r\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n//   );\r\n// }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmList_filmsList__3-sSY\",\"itemFilm\":\"FilmList_itemFilm__1KYpT\",\"filmTitle\":\"FilmList_filmTitle__2P-IF\",\"poster\":\"FilmList_poster__1-foF\"};","import styles from \"./PageHeading.module.css\";\r\n\r\nfunction PageHeading({ text }) {\r\n  return <h1 className={styles.title}>{text}</h1>;\r\n}\r\nexport default PageHeading;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__2j0-H\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport s from \"../FilmList/FilmList.module.css\";\r\n\r\nconst FilmListItem = ({ film, query }) => {\r\n  const location = useLocation();\r\n  // const { path } = useRouteMatch();\r\n  // console.log(path);\r\n  const imgUrl = \"https://image.tmdb.org/t/p/w500/\";\r\n  const defaultPoster =\r\n    \"https://media.comicbook.com/files/img/default-movie.png\";\r\n\r\n  return (\r\n    <li className={s.itemFilm}>\r\n      <Link\r\n        to={{\r\n          pathname: `/movies/${film.id}`, //–Ω–∞—à —Ä–∞—É—Ç —Ñ–∏–ª—å–º–∞\r\n          //–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ state. –µ—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç prop search - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º query, –∫–æ—Ç–æ—Ä—ã–π –≤ –ø—Ä–æ–ø—Å–∞—Ö –ø—Ä–∏–Ω–∏–º–∞–µ–º\r\n          //–∫–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∏–∑ —Å—Ç—Ä –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ prop search –ø—Ä–∏—Ö–æ–¥–∏—Ç. –∫–æ–≥–¥–∞ –∏–∑ home - –Ω–µ—Ç\r\n          state: {\r\n            search: query !== undefined ? query : \"\",\r\n            id: film.id,\r\n            from: location.pathname, //–æ—Ç–∫—É–¥–∞, —Å –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä–µ—à–ª–∏\r\n          },\r\n        }}\r\n      >\r\n        <img\r\n          className={s.poster}\r\n          src={\r\n            film?.poster_path !== null && film?.poster_path !== undefined\r\n              ? imgUrl + film.poster_path\r\n              : defaultPoster\r\n            // film.poster_path\r\n            //   ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\r\n            //   : \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n          }\r\n          alt={film.title}\r\n        ></img>\r\n        {/* {film.title} */}\r\n      </Link>\r\n      <span className={s.filmTitle}>{film.title}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FilmListItem;\r\n","import FilmListItem from \"../FilmListItem/FilmListItem\";\r\nimport s from \"../FilmList/FilmList.module.css\";\r\n\r\nconst FilmList = ({ films, query }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.filmsList}>\r\n        {films.map((film) => (\r\n          <FilmListItem query={query} key={film.id} film={film} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmList;\r\n"],"sourceRoot":""}